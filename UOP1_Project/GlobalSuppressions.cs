// This file is used by Code Analysis to maintain SuppressMessage
// attributes that are applied to this project.
// Project-level suppressions either have no target or are given
// a specific target and scoped to a namespace, type, member, etc.

using System.Diagnostics.CodeAnalysis;

[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "member", Target = "~P:GameInput.asset")]
[assembly: SuppressMessage("Style", "IDE1006:Naming Styles", Justification = "<Pending>", Scope = "member", Target = "~P:GameInput.asset")]
[assembly: SuppressMessage("StyleCop.CSharp.NamingRules", "SA1300:Element should begin with upper-case letter", Justification = "<Pending>", Scope = "member", Target = "~P:GameInput.asset")]
[assembly: SuppressMessage("StyleCop.CSharp.LayoutRules", "SA1516:Elements should be separated by blank line", Justification = "<Pending>", Scope = "member", Target = "~M:GameInput.#ctor")]
[assembly: SuppressMessage("Major Code Smell", "S3881:\"IDisposable\" should be implemented correctly", Justification = "<Pending>", Scope = "type", Target = "~T:GameInput")]
[assembly: SuppressMessage("Major Bug", "S3903:Types should be defined in named namespaces", Justification = "<Pending>", Scope = "type", Target = "~T:GameInput")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "type", Target = "~T:GameInput")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1649:File name should match first type name", Justification = "<Pending>", Scope = "type", Target = "~T:GameInput")]
[assembly: SuppressMessage("StyleCop.CSharp.OrderingRules", "SA1201:Elements should appear in the correct order", Justification = "<Pending>", Scope = "member", Target = "~M:GameInput.#ctor")]
[assembly: SuppressMessage("StyleCop.CSharp.LayoutRules", "SA1516:Elements should be separated by blank line", Justification = "<Pending>", Scope = "member", Target = "~M:GameInput.GameplayActions.#ctor(GameInput)")]
[assembly: SuppressMessage("StyleCop.CSharp.LayoutRules", "SA1516:Elements should be separated by blank line", Justification = "<Pending>", Scope = "member", Target = "~P:GameInput.GameplayActions.Move")]
[assembly: SuppressMessage("StyleCop.CSharp.NamingRules", "SA1300:Element should begin with upper-case letter", Justification = "<Pending>", Scope = "member", Target = "~P:GameInput.MenusActions.enabled")]
[assembly: SuppressMessage("StyleCop.CSharp.LayoutRules", "SA1516:Elements should be separated by blank line", Justification = "<Pending>", Scope = "member", Target = "~P:GameInput.GameplayActions.enabled")]
[assembly: SuppressMessage("StyleCop.CSharp.NamingRules", "SA1300:Element should begin with upper-case letter", Justification = "<Pending>", Scope = "member", Target = "~P:GameInput.GameplayActions.enabled")]
[assembly: SuppressMessage("StyleCop.CSharp.OrderingRules", "SA1201:Elements should appear in the correct order", Justification = "<Pending>", Scope = "member", Target = "~P:GameInput.GameplayActions.enabled")]
[assembly: SuppressMessage("StyleCop.CSharp.LayoutRules", "SA1503:Braces should not be omitted", Justification = "<Pending>", Scope = "member", Target = "~P:GameInput.KeyboardOrGamepadScheme")]
[assembly: SuppressMessage("StyleCop.CSharp.LayoutRules", "SA1516:Elements should be separated by blank line", Justification = "<Pending>", Scope = "type", Target = "~T:GameInput.GameplayActions")]
[assembly: SuppressMessage("StyleCop.CSharp.LayoutRules", "SA1516:Elements should be separated by blank line", Justification = "<Pending>", Scope = "type", Target = "~T:GameInput")]
[assembly: SuppressMessage("StyleCop.CSharp.OrderingRules", "SA1201:Elements should appear in the correct order", Justification = "<Pending>", Scope = "type", Target = "~T:GameInput.IGameplayActions")]
[assembly: SuppressMessage("StyleCop.CSharp.MaintainabilityRules", "SA1404:Code analysis suppression should have justification", Justification = "<Pending>")]
[assembly: SuppressMessage("StyleCop.CSharp.LayoutRules", "SA1502:Element should not be on a single line", Justification = "<Pending>", Scope = "member", Target = "~M:GameInput.GameplayActions.Enable")]
[assembly: SuppressMessage("StyleCop.CSharp.LayoutRules", "SA1502:Element should not be on a single line", Justification = "<Pending>", Scope = "member", Target = "~M:GameInput.GameplayActions.Get~UnityEngine.InputSystem.InputActionMap")]
[assembly: SuppressMessage("StyleCop.CSharp.LayoutRules", "SA1502:Element should not be on a single line", Justification = "<Pending>", Scope = "member", Target = "~M:GameInput.GameplayActions.Disable")]
[assembly: SuppressMessage("StyleCop.CSharp.LayoutRules", "SA1502:Element should not be on a single line", Justification = "<Pending>", Scope = "member", Target = "~M:GameInput.GameplayActions.#ctor(GameInput)")]
[assembly: SuppressMessage("StyleCop.CSharp.LayoutRules", "SA1502:Element should not be on a single line", Justification = "<Pending>", Scope = "member", Target = "~M:GameInput.GameplayActions.op_Implicit(GameInput.GameplayActions)~UnityEngine.InputSystem.InputActionMap")]
[assembly: SuppressMessage("StyleCop.CSharp.LayoutRules", "SA1502:Element should not be on a single line", Justification = "<Pending>", Scope = "member", Target = "~M:GameInput.MenusActions.#ctor(GameInput)")]
[assembly: SuppressMessage("StyleCop.CSharp.LayoutRules", "SA1502:Element should not be on a single line", Justification = "<Pending>", Scope = "member", Target = "~M:GameInput.MenusActions.Disable")]
[assembly: SuppressMessage("StyleCop.CSharp.LayoutRules", "SA1502:Element should not be on a single line", Justification = "<Pending>", Scope = "member", Target = "~M:GameInput.MenusActions.Enable")]
[assembly: SuppressMessage("StyleCop.CSharp.LayoutRules", "SA1502:Element should not be on a single line", Justification = "<Pending>", Scope = "member", Target = "~M:GameInput.MenusActions.Get~UnityEngine.InputSystem.InputActionMap")]
[assembly: SuppressMessage("StyleCop.CSharp.LayoutRules", "SA1502:Element should not be on a single line", Justification = "<Pending>", Scope = "member", Target = "~M:GameInput.MenusActions.op_Implicit(GameInput.MenusActions)~UnityEngine.InputSystem.InputActionMap")]
[assembly: SuppressMessage("Major Code Smell", "S108:Nested blocks of code should not be left empty", Justification = "<Pending>", Scope = "member", Target = "~M:GameInput.MenusActions.SetCallbacks(GameInput.IMenusActions)")]
[assembly: SuppressMessage("StyleCop.CSharp.NamingRules", "SA1308:Variable names should not be prefixed", Justification = "<Pending>", Scope = "member", Target = "~F:GameInput.GameplayActions.m_Wrapper")]
[assembly: SuppressMessage("StyleCop.CSharp.NamingRules", "SA1308:Variable names should not be prefixed", Justification = "<Pending>", Scope = "member", Target = "~F:GameInput.m_Gameplay")]
[assembly: SuppressMessage("StyleCop.CSharp.NamingRules", "SA1308:Variable names should not be prefixed", Justification = "<Pending>", Scope = "member", Target = "~F:GameInput.m_Gameplay_Attack")]
[assembly: SuppressMessage("StyleCop.CSharp.NamingRules", "SA1308:Variable names should not be prefixed", Justification = "<Pending>", Scope = "member", Target = "~F:GameInput.m_Gameplay_ExtraAction")]
[assembly: SuppressMessage("StyleCop.CSharp.NamingRules", "SA1308:Variable names should not be prefixed", Justification = "<Pending>", Scope = "member", Target = "~F:GameInput.m_Gameplay_Interact")]
[assembly: SuppressMessage("StyleCop.CSharp.NamingRules", "SA1308:Variable names should not be prefixed", Justification = "<Pending>", Scope = "member", Target = "~F:GameInput.m_Gameplay_Jump")]
[assembly: SuppressMessage("StyleCop.CSharp.NamingRules", "SA1308:Variable names should not be prefixed", Justification = "<Pending>", Scope = "member", Target = "~F:GameInput.m_Gameplay_Move")]
[assembly: SuppressMessage("StyleCop.CSharp.NamingRules", "SA1308:Variable names should not be prefixed", Justification = "<Pending>", Scope = "member", Target = "~F:GameInput.m_Gameplay_Pause")]
[assembly: SuppressMessage("StyleCop.CSharp.NamingRules", "SA1308:Variable names should not be prefixed", Justification = "<Pending>", Scope = "member", Target = "~F:GameInput.m_Gameplay_RotateCamera")]
[assembly: SuppressMessage("StyleCop.CSharp.NamingRules", "SA1308:Variable names should not be prefixed", Justification = "<Pending>", Scope = "member", Target = "~F:GameInput.m_GameplayActionsCallbackInterface")]
[assembly: SuppressMessage("StyleCop.CSharp.NamingRules", "SA1308:Variable names should not be prefixed", Justification = "<Pending>", Scope = "member", Target = "~F:GameInput.m_KeyboardOrGamepadSchemeIndex")]
[assembly: SuppressMessage("StyleCop.CSharp.NamingRules", "SA1308:Variable names should not be prefixed", Justification = "<Pending>", Scope = "member", Target = "~F:GameInput.m_Menus")]
[assembly: SuppressMessage("StyleCop.CSharp.NamingRules", "SA1308:Variable names should not be prefixed", Justification = "<Pending>", Scope = "member", Target = "~F:GameInput.m_MenusActionsCallbackInterface")]
[assembly: SuppressMessage("StyleCop.CSharp.NamingRules", "SA1308:Variable names should not be prefixed", Justification = "<Pending>", Scope = "member", Target = "~F:GameInput.MenusActions.m_Wrapper")]
[assembly: SuppressMessage("StyleCop.CSharp.OrderingRules", "SA1201:Elements should appear in the correct order", Justification = "<Pending>", Scope = "member", Target = "~F:GameInput.m_Gameplay")]
[assembly: SuppressMessage("StyleCop.CSharp.OrderingRules", "SA1201:Elements should appear in the correct order", Justification = "<Pending>", Scope = "member", Target = "~F:GameInput.m_KeyboardOrGamepadSchemeIndex")]
[assembly: SuppressMessage("StyleCop.CSharp.OrderingRules", "SA1201:Elements should appear in the correct order", Justification = "<Pending>", Scope = "member", Target = "~F:GameInput.m_Menus")]
[assembly: SuppressMessage("StyleCop.CSharp.OrderingRules", "SA1201:Elements should appear in the correct order", Justification = "<Pending>", Scope = "member", Target = "~P:GameInput.bindingMask")]
[assembly: SuppressMessage("StyleCop.CSharp.OrderingRules", "SA1201:Elements should appear in the correct order", Justification = "<Pending>", Scope = "member", Target = "~P:GameInput.Gameplay")]
[assembly: SuppressMessage("Style", "IDE1006:Naming Styles", Justification = "<Pending>", Scope = "member", Target = "~P:GameInput.GameplayActions.enabled")]
[assembly: SuppressMessage("StyleCop.CSharp.OrderingRules", "SA1201:Elements should appear in the correct order", Justification = "<Pending>", Scope = "member", Target = "~P:GameInput.Menus")]
[assembly: SuppressMessage("Style", "IDE1006:Naming Styles", Justification = "<Pending>", Scope = "member", Target = "~P:GameInput.MenusActions.enabled")]
[assembly: SuppressMessage("StyleCop.CSharp.OrderingRules", "SA1201:Elements should appear in the correct order", Justification = "<Pending>", Scope = "member", Target = "~P:GameInput.MenusActions.enabled")]
[assembly: SuppressMessage("StyleCop.CSharp.LayoutRules", "SA1513:Closing brace should be followed by blank line", Justification = "<Pending>", Scope = "member", Target = "~M:GameInput.GameplayActions.SetCallbacks(GameInput.IGameplayActions)")]
[assembly: SuppressMessage("StyleCop.CSharp.LayoutRules", "SA1513:Closing brace should be followed by blank line", Justification = "<Pending>", Scope = "member", Target = "~M:GameInput.MenusActions.SetCallbacks(GameInput.IMenusActions)")]
[assembly: SuppressMessage("StyleCop.CSharp.LayoutRules", "SA1513:Closing brace should be followed by blank line", Justification = "<Pending>", Scope = "type", Target = "~T:GameInput")]
[assembly: SuppressMessage("Style", "IDE0044:Add readonly modifier", Justification = "<Pending>", Scope = "member", Target = "~F:GameInput.GameplayActions.m_Wrapper")]
[assembly: SuppressMessage("Major Code Smell", "S2933:Fields that are only assigned in the constructor should be \"readonly\"", Justification = "<Pending>", Scope = "member", Target = "~F:GameInput.GameplayActions.m_Wrapper")]
[assembly: SuppressMessage("Style", "IDE0044:Add readonly modifier", Justification = "<Pending>", Scope = "member", Target = "~F:GameInput.MenusActions.m_Wrapper")]
[assembly: SuppressMessage("Major Code Smell", "S2933:Fields that are only assigned in the constructor should be \"readonly\"", Justification = "<Pending>", Scope = "member", Target = "~F:GameInput.MenusActions.m_Wrapper")]
[assembly: SuppressMessage("StyleCop.CSharp.LayoutRules", "SA1515:Single-line comment should be preceded by blank line", Justification = "<Pending>", Scope = "member", Target = "~M:GameInput.#ctor")]
[assembly: SuppressMessage("StyleCop.CSharp.OrderingRules", "SA1214:Readonly fields should appear before non-readonly fields", Justification = "<Pending>", Scope = "member", Target = "~F:GameInput.m_Gameplay_Move")]
